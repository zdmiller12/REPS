{
    "abbrev": "autoLabel",
    "description": [
        "1. declare section, subsection, or paragraph (i.e. \\section{One Two Three Four})",
        "2. press space",
        "3. observe the automatic label (i.e. \\label{part:one-two-three})",
        "*will recreate label if it's edited and steps are followed again"
    ],
    "formatVersion": 1,
    "menu": "",
    "name": "Automatic Label Creation",
    "shortcut": "",
    "tag": [
        "%SCRIPT",
        "// all matches",
        "matches = triggerMatches;",
        "// the structure title",
        "title = matches[matches.length-1];",
        "fullTitle = title",
        "inputTitle = fullTitle.replace(/ /gi,\"\");",
        "// shorten to three words",
        "title = title.match(/^([^ ]+ ){0,2}([^ ]+)?/i)[0];",
        "// sanetize title",
        "title = title.replace(/[äàáâã]/gi,\"a\");",
        "title = title.replace(/[ëèéêẽ]/gi,\"e\");",
        "title = title.replace(/[ïìíîĩ]/gi,\"i\");",
        "title = title.replace(/[öòóôõ]/gi,\"o\");",
        "title = title.replace(/[üùúûũ]/gi,\"u\");",
        "title = title.replace(/[ç]/gi,\"c\");",
        "title = title.replace(/,/gi,\"\");",
        "title = title.replace(/\\W/gi,\"-\").toLowerCase();",
        "// get long type",
        "type = matches[2];",
        "",
        "prefixes = {",
        "\"subsubsection\": \"sssec\",",
        "\"subsection\": \"ssec\",",
        "\"section\": \"sec\",",
        "\"chapter\": \"ch\",",
        "\"part\": \"part\",",
        "\"paragraph\": \"pg\"",
        "}",
        "// replace type by short type",
        "if (type in prefixes) {",
        "type = prefixes[type];",
        "}",
        "fullFilePath = \"Parts/\"+type+\"_\"+inputTitle",
        "// output",
        "editor.write(\"\\n\");",
        "if (type == \"sec\") {",
        "editor.write(\"  \");",
        "}",
        "editor.write(\"\\\\label{\"+type+\":\"+title+\"}\");",
        "if (type == \"sec\") {",
        "editor.write(\"\\\\index{\"+fullTitle+\"}\");",
        "}",
        "editor.write(\"\\\\input{\"+fullFilePath+\"}\");",
        "fileCheck = readFile(fullFilePath+\".tex\");",
        "if (fileCheck == null) {",
        "writeFile(fullFilePath+\".tex\", \"heyyy\");",
        "}"
    ],
    "trigger": "(?<=\\\\((sub)*section|chapter|part|paragraph)\\{([^}]*)\\})[ ]"
}
